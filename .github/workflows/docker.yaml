name: Publish Docker Image

on:
  push:
    tags:
      - 'v*'
      - '*'
  workflow_dispatch:
    inputs:
      force_base_build:
        description: 'Force rebuild of base images'
        required: false
        type: boolean
        default: false

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      base_build_needed: ${{ steps.decide.outputs.base_build_needed }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2  # Required for change detection
      
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            base_files:
              - 'Dockerfile.core'
              - 'Dockerfile.multi'
              - 'build.sh'
              - 'install.sh'
      
      - name: Debug changed files
        run: |
          echo "🔍 Change detection results:"
          echo "base_files: ${{ steps.changes.outputs.base_files }}"
          echo "Changed files in this push:"
          git diff --name-only HEAD~1 HEAD 2>/dev/null || echo "No diff available"
      
      - name: Determine if base build needed
        id: decide
        run: |
          if [[ "${{ inputs.force_base_build }}" == "true" ]]; then
            echo "base_build_needed=true" >> $GITHUB_OUTPUT
            echo "✅ Base build forced via input"
          elif [[ "${{ steps.changes.outputs.base_files }}" == 'true' ]]; then
            echo "base_build_needed=true" >> $GITHUB_OUTPUT
            echo "✅ Base build needed - files changed"
          else
            echo "base_build_needed=false" >> $GITHUB_OUTPUT
            echo "❌ No base build needed"
          fi

  build-core:
    needs: changes
    if: ${{ needs.changes.outputs.base_build_needed == 'true' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    # ... rest of your build steps

  build-multi:
    needs: [changes, build-core]
    if: ${{ needs.changes.outputs.base_build_needed == 'true' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    # ... rest of your build steps

